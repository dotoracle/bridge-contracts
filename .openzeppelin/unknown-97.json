{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x1a361FF1ab9C3252cb6293BC2845e798319B837d",
      "txHash": "0xbdc686cc2e937a9282866bf8fce514b9e23674623cafad802d2b8aaa40c19532",
      "kind": "uups"
    },
    {
      "address": "0x5B70511FFCcEA85c55E56e0594deEC78668F115e",
      "txHash": "0xc092e80d83c588d0c176bc6996fd1e324e40e34d30bcd4c9bcd9ea15485b503c",
      "kind": "uups"
    },
    {
      "address": "0x675957D79776828D436FE92cF718BdddB02Ec3c2",
      "txHash": "0x2c973e56a18f8f50d12a9a61174a4f6c5d190dd4690631bafa947f30b5131244",
      "kind": "uups"
    }
  ],
  "impls": {
    "38f225a77b57ccc66c43079abcf5f9df1ece87aa51266aca445b986b1aaab5db": {
      "address": "0x750d1411e456fBdeaA06f45920364D60AC47E7d4",
      "txHash": "0x8ccdc1580baaae063ff9d1cd4979cb39ea2ee53e925430d3f3c57fb7dddc25f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Governable",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/generic/Governable.sol:17"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/lib/ChainIdHolding.sol:5"
          },
          {
            "contract": "GenericBridge",
            "label": "alreadyClaims",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeApprovers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "contract": "GenericBridge",
            "label": "approverMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "contract": "GenericBridge",
            "label": "supportedChainIds",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapSupportCheck",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapReverse",
            "type": "t_mapping(t_address,t_struct(TokenInfo)5079_storage)",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:44"
          },
          {
            "contract": "GenericBridge",
            "label": "originTokenList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:45"
          },
          {
            "contract": "GenericBridge",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "contract": "GenericBridge",
            "label": "index",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:48"
          },
          {
            "contract": "GenericBridge",
            "label": "minApprovers",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:49"
          }
        ],
        "types": {
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5079_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)"
          },
          "t_struct(TokenInfo)5079_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4e9f57c9a628008013653513194b5f9dc87e4bf8e9f5067712db1f91303533bf": {
      "address": "0xe551A68Ef2Fe1915b1AC2Df99f7AD819762EAe21",
      "txHash": "0xd12d54e31d33fc60a9d9693108f4905315b5d838bfa20340b000715ed9d62727",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:21"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:26"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:214"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:80"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:30"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:21"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:77"
          },
          {
            "contract": "Governable",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/generic/Governable.sol:17"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/lib/ChainIdHolding.sol:5"
          },
          {
            "contract": "GenericBridge",
            "label": "NATIVE_TOKEN_ADDRESS",
            "type": "t_address",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "contract": "GenericBridge",
            "label": "alreadyClaims",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeApprovers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "contract": "GenericBridge",
            "label": "approverMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "contract": "GenericBridge",
            "label": "supportedChainIds",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapSupportCheck",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapReverse",
            "type": "t_mapping(t_address,t_struct(TokenInfo)5079_storage)",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "contract": "GenericBridge",
            "label": "originTokenList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:44"
          },
          {
            "contract": "GenericBridge",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:45"
          },
          {
            "contract": "GenericBridge",
            "label": "index",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:47"
          },
          {
            "contract": "GenericBridge",
            "label": "minApprovers",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:48"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5079_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)"
          },
          "t_struct(TokenInfo)5079_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
