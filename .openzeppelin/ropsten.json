{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x7584A6201C47e623eA5C533A93dD77F4E8FB93ec",
      "txHash": "0x8b87a52cb13f65fb2a661a3d38cd7059a3b158c50fb916823acdd53004043790",
      "kind": "uups"
    },
    {
      "address": "0xc1E87F74592f248daA00cE8d86b176c0693A5700",
      "txHash": "0x70cdad3af66e0a18b7122b965ce78c839e098af5f3d935e4446dda47f3017d06",
      "kind": "uups"
    },
    {
      "address": "0xf2098fDc643a66Fe8814E516d1f9BD887aC71220",
      "txHash": "0x3eca80d0189004ea82069e2515188602dff73872f8b040bf3e5f1b200d48b878",
      "kind": "uups"
    },
    {
      "address": "0xA32c78C1d2bef2a5cA3E942C11Ada6D9D8768f4f",
      "txHash": "0x55350326103c38aed91af811857e05c0caf4309da0f0c1eabe2bfb84a2396e77",
      "kind": "uups"
    },
    {
      "address": "0xFEBeadb3dDA309e765Dfa59Ae68DebDFE913D6eC",
      "txHash": "0x2122f7cb7fc0fd442ff2804979e9df7cdb45f41244fe6d4e1f5e8a75f0e3251a",
      "kind": "uups"
    },
    {
      "address": "0x704BA42C42d1dEb4D4fEb08eEC1D1003e94263E0",
      "txHash": "0x31eaaa21749baff37c721ee0135fe1b15d88324de30c9d4c0c1206a5935319f3",
      "kind": "uups"
    },
    {
      "address": "0x091a70a63c37eB8f8DD8b446CDbC22752387c47e",
      "txHash": "0x4ca9969ce21040a28132825430013c4f4b4649d0228990cab0f860d6cf652ce7",
      "kind": "uups"
    },
    {
      "address": "0x7F9A080f623AACe313B681ED882ae548AaE67d51",
      "txHash": "0xd5bc729a0e5bd710e22aa9518a22734290d64b166ef611f147513e6bd2e3c43a",
      "kind": "uups"
    },
    {
      "address": "0x32aa41A30FAa953BA19BE4A3eda2226830695b42",
      "txHash": "0xa4ddd72ec420753f190c980622d4bb56e81756d20309cd33e6f74ac19d6342ac",
      "kind": "uups"
    },
    {
      "address": "0x864C2465830718293bA4b72d5802341B82872541",
      "txHash": "0x95e4faf14b222a3b440cf0a3f43b0def6dc500e9d41051c9e813c26bf37cf393",
      "kind": "uups"
    },
    {
      "address": "0x359A02346FF7bde93B9de0df274c6329ff34C51d",
      "txHash": "0x10a746f1b3dbe811d08b0ec3fdf40fc1c53b85875f3aec251b7cc65163f8f399",
      "kind": "uups"
    }
  ],
  "impls": {
    "750982cc5152581dda10d58cb74a68eef1cbb58e36aa4f6fd61ce9991ffa6e3f": {
      "address": "0x85492e596Fa418760b6207463fA82E34d7e391bA",
      "txHash": "0x6889038d72bd8080da8ce0aa31d3d980dd43e3cdcea0706bde34c565879d995c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Governable",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/generic/Governable.sol:17"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/lib/ChainIdHolding.sol:5"
          },
          {
            "contract": "GenericBridge",
            "label": "NATIVE_TOKEN_ADDRESS",
            "type": "t_address",
            "src": "contracts/generic/GenericBridge.sol:33"
          },
          {
            "contract": "GenericBridge",
            "label": "alreadyClaims",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeApprovers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "contract": "GenericBridge",
            "label": "approverMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "contract": "GenericBridge",
            "label": "supportedChainIds",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapSupportCheck",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapReverse",
            "type": "t_mapping(t_address,t_struct(TokenInfo)5125_storage)",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "contract": "GenericBridge",
            "label": "originTokenList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "contract": "GenericBridge",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:44"
          },
          {
            "contract": "GenericBridge",
            "label": "index",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "contract": "GenericBridge",
            "label": "minApprovers",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5125_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)"
          },
          "t_struct(TokenInfo)5125_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "82d63574bfe8467f52aaff744069c5e562bd9b59d883df7d3d51cb0bb3f37a13": {
      "address": "0xE98B5211FaAa9Dfb21e8a13F378d5BaDaD773a00",
      "txHash": "0x1bd72e28cc13f0404189d7efc57def480f70d4f1119cf66a8a98f5d7e411c4bb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Governable",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/generic/Governable.sol:17"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/lib/ChainIdHolding.sol:5"
          },
          {
            "contract": "GenericBridge",
            "label": "NATIVE_TOKEN_ADDRESS",
            "type": "t_address",
            "src": "contracts/generic/GenericBridge.sol:33"
          },
          {
            "contract": "GenericBridge",
            "label": "alreadyClaims",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeApprovers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "contract": "GenericBridge",
            "label": "approverMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "contract": "GenericBridge",
            "label": "supportedChainIds",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapSupportCheck",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapReverse",
            "type": "t_mapping(t_address,t_struct(TokenInfo)5125_storage)",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "contract": "GenericBridge",
            "label": "originTokenList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "contract": "GenericBridge",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:44"
          },
          {
            "contract": "GenericBridge",
            "label": "index",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "contract": "GenericBridge",
            "label": "minApprovers",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5125_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)"
          },
          "t_struct(TokenInfo)5125_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bc137af7e78e21a8fc6b2fc1dce740be7464e1c722e5f94dd2b5496196476300": {
      "address": "0xE607Df8E8Ce958703E27CbeF804b92015B4e6365",
      "txHash": "0x2a9446a9072e24ab1abc67ec9da551b304ed5fbb72ece1bc578c492ee147968d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Governable",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/generic/Governable.sol:17"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/lib/ChainIdHolding.sol:5"
          },
          {
            "contract": "GenericBridge",
            "label": "NATIVE_TOKEN_ADDRESS",
            "type": "t_address",
            "src": "contracts/generic/GenericBridge.sol:33"
          },
          {
            "contract": "GenericBridge",
            "label": "alreadyClaims",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeApprovers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "contract": "GenericBridge",
            "label": "approverMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "contract": "GenericBridge",
            "label": "supportedChainIds",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapSupportCheck",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapReverse",
            "type": "t_mapping(t_address,t_struct(TokenInfo)5128_storage)",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "contract": "GenericBridge",
            "label": "originTokenList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "contract": "GenericBridge",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:44"
          },
          {
            "contract": "GenericBridge",
            "label": "index",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "contract": "GenericBridge",
            "label": "minApprovers",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5128_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)"
          },
          "t_struct(TokenInfo)5128_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "beaf415b4f7324bcc4d6968ffc9b499176901163e5f662428f836302f0868e6e": {
      "address": "0x65AA1b45Fd94C3B953CA1E502aBF37b5BbBFc79F",
      "txHash": "0x0445022332784fc6d62e68713245a9615ecbbf024e67b52bccab4c8fa10224f1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Governable",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/generic/Governable.sol:17"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/lib/ChainIdHolding.sol:5"
          },
          {
            "contract": "GenericBridge",
            "label": "NATIVE_TOKEN_ADDRESS",
            "type": "t_address",
            "src": "contracts/generic/GenericBridge.sol:33"
          },
          {
            "contract": "GenericBridge",
            "label": "alreadyClaims",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeApprovers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "contract": "GenericBridge",
            "label": "approverMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "contract": "GenericBridge",
            "label": "supportedChainIds",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapSupportCheck",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapReverse",
            "type": "t_mapping(t_address,t_struct(TokenInfo)5124_storage)",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "contract": "GenericBridge",
            "label": "originTokenList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "contract": "GenericBridge",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:44"
          },
          {
            "contract": "GenericBridge",
            "label": "index",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "contract": "GenericBridge",
            "label": "minApprovers",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5124_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)"
          },
          "t_struct(TokenInfo)5124_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "53d8f4a0327fa3e42d8dadb9a33b0eb377fb78bfadc4239c7c12b5f8beae5ac2": {
      "address": "0x8a76F95C78BC5B8B6A9643815918ad8aeB8E2679",
      "txHash": "0xe6a805286663f896bc5a2682ded2eba6fa11edf1a7961dc241ed586cb41e698b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Governable",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/generic/Governable.sol:17"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/lib/ChainIdHolding.sol:5"
          },
          {
            "contract": "GenericBridge",
            "label": "NATIVE_TOKEN_ADDRESS",
            "type": "t_address",
            "src": "contracts/generic/GenericBridge.sol:33"
          },
          {
            "contract": "GenericBridge",
            "label": "alreadyClaims",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeApprovers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "contract": "GenericBridge",
            "label": "approverMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "contract": "GenericBridge",
            "label": "supportedChainIds",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapSupportCheck",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapReverse",
            "type": "t_mapping(t_address,t_struct(TokenInfo)5115_storage)",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "contract": "GenericBridge",
            "label": "originTokenList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "contract": "GenericBridge",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:44"
          },
          {
            "contract": "GenericBridge",
            "label": "index",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "contract": "GenericBridge",
            "label": "minApprovers",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5115_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)"
          },
          "t_struct(TokenInfo)5115_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8e69e6559459847fad4ee6a9bd71c17ddbe14aa1c6560abed02f8bfdcda4028e": {
      "address": "0xdd17b5eD6964E712797a52B2cE06e934CC27793a",
      "txHash": "0x48e041b0e79977693ab313fbc5949dedbd590c02f29f7f87911670b60d437fde",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Governable",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/generic/Governable.sol:17"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/lib/ChainIdHolding.sol:5"
          },
          {
            "contract": "GenericBridge",
            "label": "NATIVE_TOKEN_ADDRESS",
            "type": "t_address",
            "src": "contracts/generic/GenericBridge.sol:33"
          },
          {
            "contract": "GenericBridge",
            "label": "alreadyClaims",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeApprovers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "contract": "GenericBridge",
            "label": "approverMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "contract": "GenericBridge",
            "label": "supportedChainIds",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapSupportCheck",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapReverse",
            "type": "t_mapping(t_address,t_struct(TokenInfo)5115_storage)",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "contract": "GenericBridge",
            "label": "originTokenList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "contract": "GenericBridge",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:44"
          },
          {
            "contract": "GenericBridge",
            "label": "index",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "contract": "GenericBridge",
            "label": "minApprovers",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5115_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)"
          },
          "t_struct(TokenInfo)5115_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "921021684dfb75dd5fb8a6c17dfa9e4ce486478568c07315452625dd02454617": {
      "address": "0x2817B64FC2379D3D261d50629eC13De919C50eB7",
      "txHash": "0x8101f42b3ff5a9badf4b24cee850aa410ddb723289cc8628caca430a97a50958",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Governable",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/generic/Governable.sol:17"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/lib/ChainIdHolding.sol:5"
          },
          {
            "contract": "GenericBridge",
            "label": "NATIVE_TOKEN_ADDRESS",
            "type": "t_address",
            "src": "contracts/generic/GenericBridge.sol:33"
          },
          {
            "contract": "GenericBridge",
            "label": "alreadyClaims",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeApprovers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "contract": "GenericBridge",
            "label": "approverMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "contract": "GenericBridge",
            "label": "supportedChainIds",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapSupportCheck",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapReverse",
            "type": "t_mapping(t_address,t_struct(TokenInfo)5115_storage)",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "contract": "GenericBridge",
            "label": "originTokenList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "contract": "GenericBridge",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:44"
          },
          {
            "contract": "GenericBridge",
            "label": "index",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "contract": "GenericBridge",
            "label": "minApprovers",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5115_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)"
          },
          "t_struct(TokenInfo)5115_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9f9e6a26f2f859dd096180098c72b15c781bdd878e1d3673393ff151a09149e1": {
      "address": "0x38c1B45A95dBeC9D04EA11D42D67d90Df47CE9A3",
      "txHash": "0xb1d1eb7c92831433b9335d2fa9d595631b24234fbc41cdb5b6a1494d9fc05447",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Governable",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/generic/Governable.sol:17"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/lib/ChainIdHolding.sol:5"
          },
          {
            "contract": "GenericBridge",
            "label": "NATIVE_TOKEN_ADDRESS",
            "type": "t_address",
            "src": "contracts/generic/GenericBridge.sol:33"
          },
          {
            "contract": "GenericBridge",
            "label": "alreadyClaims",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeApprovers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "contract": "GenericBridge",
            "label": "approverMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "contract": "GenericBridge",
            "label": "supportedChainIds",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapSupportCheck",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapReverse",
            "type": "t_mapping(t_address,t_struct(TokenInfo)5124_storage)",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "contract": "GenericBridge",
            "label": "originTokenList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "contract": "GenericBridge",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:44"
          },
          {
            "contract": "GenericBridge",
            "label": "index",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "contract": "GenericBridge",
            "label": "minApprovers",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5124_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)"
          },
          "t_struct(TokenInfo)5124_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a3fe890af8c6d7553471e380d52df1476390001476ed1574974a02022eac374d": {
      "address": "0x097AB0B7fad1F641D26Ca3A5846c76d73b0D1D99",
      "txHash": "0x865a60c61a5f72134841fc3ad66094e9d6e2c960978303f23464103dab6d1d20",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:37"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts/proxy/utils/Initializable.sol:42"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:81"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:82"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:68"
          },
          {
            "contract": "Governable",
            "label": "governance",
            "type": "t_address",
            "src": "contracts/generic/Governable.sol:17"
          },
          {
            "contract": "ChainIdHolding",
            "label": "chainId",
            "type": "t_uint256",
            "src": "contracts/lib/ChainIdHolding.sol:5"
          },
          {
            "contract": "GenericBridge",
            "label": "NATIVE_TOKEN_ADDRESS",
            "type": "t_address",
            "src": "contracts/generic/GenericBridge.sol:33"
          },
          {
            "contract": "GenericBridge",
            "label": "alreadyClaims",
            "type": "t_mapping(t_bytes32,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:34"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeApprovers",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:35"
          },
          {
            "contract": "GenericBridge",
            "label": "approverMap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:36"
          },
          {
            "contract": "GenericBridge",
            "label": "supportedChainIds",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:37"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapList",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "src": "contracts/generic/GenericBridge.sol:38"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapSupportCheck",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "src": "contracts/generic/GenericBridge.sol:39"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMap",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_address))",
            "src": "contracts/generic/GenericBridge.sol:40"
          },
          {
            "contract": "GenericBridge",
            "label": "tokenMapReverse",
            "type": "t_mapping(t_address,t_struct(TokenInfo)5127_storage)",
            "src": "contracts/generic/GenericBridge.sol:41"
          },
          {
            "contract": "GenericBridge",
            "label": "bridgeTokens",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/generic/GenericBridge.sol:42"
          },
          {
            "contract": "GenericBridge",
            "label": "originTokenList",
            "type": "t_array(t_address)dyn_storage",
            "src": "contracts/generic/GenericBridge.sol:43"
          },
          {
            "contract": "GenericBridge",
            "label": "claimFee",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:44"
          },
          {
            "contract": "GenericBridge",
            "label": "index",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:46"
          },
          {
            "contract": "GenericBridge",
            "label": "minApprovers",
            "type": "t_uint256",
            "src": "contracts/generic/GenericBridge.sol:47"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_address))": {
            "label": "mapping(uint256 => mapping(address => address))"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(TokenInfo)5127_storage)": {
            "label": "mapping(address => struct GenericBridge.TokenInfo)"
          },
          "t_struct(TokenInfo)5127_storage": {
            "label": "struct GenericBridge.TokenInfo",
            "members": [
              {
                "label": "addr",
                "type": "t_address"
              },
              {
                "label": "chainId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
